{"version":3,"names":["movieFinderCss","MovieFinder","onUserInput","event","this","movieUserInput","target","value","movieInputValid","trim","onFindMovies","preventDefault","movieName","movieNameInput","options","method","headers","accept","Authorization","fetch","then","response","json","parsedRes","fetchedMovies","map","match","title","image_url","release","console","log","catch","err","error","render","IMAGE_BASE_URL","searchResults","h","class","length","result","src","onSubmit","bind","type","name","id","ref","el","onInput","disabled","movieListsCss","MovieLists","connectedCallback","movieListType","movieListsResults","slice","original_title","overview","rating","toTitleCase","text","replace","txt","charAt","toUpperCase","substr","toLowerCase","MOVIE_LIST_TITLE"],"sources":["./src/components/movie-finder/movie-finder.css?tag=wc-movie-finder&encapsulation=shadow","./src/components/movie-finder/movie-finder.tsx","./src/components/movie-lists/movie-lists.css?tag=wc-movie-lists&encapsulation=shadow","./src/components/movie-lists/movie-lists.tsx"],"sourcesContent":[".movie-finder {\n  display: flex;\n  justify-content: center;\n  margin: 2rem;\n}\n\n.movie-finder-input {\n  width: 100%;\n  height: 46px;\n  line-height: 46px;\n  font-size: 1.1em;\n  color: rgba(0, 0, 0, 0.5);\n  border: none;\n  border-radius: 30px;\n  padding: 10px 20px;\n}\n\n.movie-finder-result-title {\n  color: white;\n  font-weight: bold;\n  margin: 2rem;\n}\n\nul {\n  list-style: none;\n  padding-inline-start: 0.5rem;\n  padding-inline-end: 0.5rem;\n  display: flex;\n  flex-direction: row;\n  overflow: scroll;\n  background-color: white;\n  margin: 2rem;\n  border-radius: 1rem;\n}\n\n.movie-finder-wrapper {\n  padding: 0.5rem;\n  margin-bottom: 8px;\n}\n\n.movie-finder-info {\n  display: flex;\n  flex-direction: column;\n  font-size: 12px;\n}\n\n.movie-finder_movie-title {\n  height: 2.25rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.movie-finder-image,\n.movie-finder-no-image {\n  width: 110px;\n  height: 165px;\n}\n\n.movie-finder-no-image {\n  margin: 0 0 0.5rem;\n  outline: 1px solid gray;\n}\n","import { Component, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'wc-movie-finder',\n  styleUrl: 'movie-finder.css',\n  shadow: true,\n})\nexport class MovieFinder {\n  movieNameInput: HTMLInputElement;\n\n  @State() fetchedMovies: {\n    title: string;\n    image_url: string;\n    release: string;\n  }[] = [];\n  @State() movieUserInput: string;\n  @State() movieInputValid = false;\n\n  onUserInput(event: Event) {\n    this.movieUserInput = (event.target as HTMLInputElement).value; // get value of user input\n    this.movieInputValid = this.movieUserInput.trim() !== '' ? true : false;\n  }\n\n  onFindMovies(event) {\n    event.preventDefault();\n    const movieName = this.movieNameInput.value;\n\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: `${process.env.TMDB_AUTH}`,\n      },\n    };\n\n    fetch(`${process.env.TMDB_BASE_URL}search/movie?query=${movieName}&include_adult=false&language=en-US&page=1`, options)\n      .then(response => response.json())\n      .then(parsedRes => {\n        // console.log(parsedRes['results']);\n        this.fetchedMovies = parsedRes['results'].map(match => {\n          return {\n            title: match['original_title'],\n            image_url: match['poster_path'],\n            release: match['release_date'],\n          };\n        });\n        console.log(this.fetchedMovies);\n      })\n      .catch(err => console.error(err));\n  }\n\n  render() {\n    const IMAGE_BASE_URL = `https://image.tmdb.org/t/p/w220_and_h330_face`;\n\n    let searchResults = [\n      <p class=\"movie-finder-result-title\">\n        Showing {this.fetchedMovies.length} results for {this.movieUserInput}\n      </p>,\n      <ul>\n        {this.fetchedMovies.map(result => (\n          <li class=\"movie-finder-wrapper\">\n            {result.image_url !== null ? (\n              <a class=\"movie-finder_image-wrapper\">\n                <img src={IMAGE_BASE_URL + result.image_url} class=\"movie-finder-image\"></img>\n              </a>\n            ) : (\n              <p class=\"movie-finder-no-image\">No poster found</p>\n            )}\n            <div class=\"movie-finder-info\">\n              <p class=\"movie-finder_movie-title\">\n                <strong>{result.title}</strong>\n              </p>\n              {result.release !== '' ? <p>{result.release}</p> : <p>No release info</p>}\n            </div>\n          </li>\n        ))}\n      </ul>,\n    ];\n    return [\n      <form onSubmit={this.onFindMovies.bind(this)}>\n        <div class=\"movie-finder\">\n          <input\n            type=\"text\"\n            name=\"movie-finder-input\"\n            id=\"movie-finder-input\"\n            class=\"movie-finder-input\"\n            ref={el => (this.movieNameInput = el)}\n            value={this.movieUserInput}\n            onInput={this.onUserInput.bind(this)}\n          />\n          <button type=\"submit\" disabled={!this.movieInputValid}>\n            Find!\n          </button>\n        </div>\n      </form>,\n      <div>{searchResults}</div>,\n    ];\n  }\n}\n",".movie-lists_header {\n  text-align: left;\n  color: white;\n  margin: 2rem;\n}\n\nul {\n  list-style: none;\n  padding-inline-start: 0;\n  padding-inline-end: 0;\n  margin: 2rem;\n}\n\n.movie-lists-wrapper {\n  display: flex;\n  background-color: white;\n  border-radius: 1rem;\n  margin-bottom: 2rem;\n}\n\n.movie-lists-image,\n.movie-lists-info {\n  padding: 1rem;\n}\n\n.movie-lists-image {\n  width: 110px;\n  height: 165px;\n}\n","import { Component, Prop, State, h } from '@stencil/core';\n@Component({\n  tag: 'wc-movie-lists',\n  styleUrl: 'movie-lists.css',\n  shadow: true,\n})\nexport class MovieLists {\n  @State() movieListsResults: {\n    original_title: string;\n    overview: string;\n    release: string;\n    image_url: string;\n    rating: number;\n  }[] = [];\n\n  @Prop({ reflect: true }) movieListType: string;\n\n  connectedCallback() {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: `${process.env.TMDB_AUTH}`,\n      },\n    };\n\n    fetch(`${process.env.TMDB_BASE_URL}movie/${this.movieListType}?language=en-US&page=1`, options)\n      .then(response => response.json())\n      .then(parsedRes => {\n        // console.log(parsedRes['results']);\n        this.movieListsResults = parsedRes['results'].slice(0, 5).map(match => {\n          return {\n            original_title: match['original_title'],\n            overview: match['overview'],\n            release: match['release_date'],\n            image_url: match['poster_path'],\n            rating: match['vote_average'],\n          };\n        });\n        // console.log(this.movieListsResults);\n      })\n      .catch(err => console.error(err));\n  }\n\n  toTitleCase(text) {\n    return text.replace(/\\w\\S*/g, function (txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  }\n\n  render() {\n    const IMAGE_BASE_URL = `https://image.tmdb.org/t/p/w220_and_h330_face`;\n    const MOVIE_LIST_TITLE = this.toTitleCase(this.movieListType.replace('_', ' '));\n\n    return [\n      <h3 class=\"movie-lists_header\">{MOVIE_LIST_TITLE + ' Movies'}</h3>,\n\n      <ul>\n        {this.movieListsResults.map(result => (\n          <li class=\"movie-lists-wrapper\">\n            <a class=\"movie-lists_image-wrapper\">\n              <img src={IMAGE_BASE_URL + result.image_url} class=\"movie-lists-image\"></img>\n            </a>\n            <div class=\"movie-lists-info\">\n              <strong>{result.original_title}</strong>\n              <p>\n                <strong>Rating</strong> : {result.rating}\n              </p>\n              <p>\n                <strong>Released</strong> : {result.release}\n              </p>\n              <p>{result.overview}</p>\n            </div>\n          </li>\n        ))}\n      </ul>,\n    ];\n  }\n}\n"],"mappings":"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"}